group 'RLBot'
version '1.0-SNAPSHOT'


apply plugin: 'protobuf'
apply plugin: "java"
apply plugin: 'com.jfrog.bintray'

def protoVersion = '3.5.0'
def protoUrlPrefix = 'https://repo1.maven.org/maven2/com/google/protobuf/protoc/'
def protoUrlPostfix = '-windows-x86_64.exe'
def protoUrl = protoUrlPrefix + protoVersion + '/protoc-' + protoVersion + protoUrlPostfix
println(protoUrl)

def apikey = new File('apikey').text


def f = new File("resources/protoc.exe")
if (!f.exists()) {
    new URL(protoUrl).withInputStream{ i -> f.withOutputStream{ it << i }}
}


repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.andrewkroh.gradle:gradle-protobuf-plugin:0.5.0'
    }
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.4'
    }
}


protobuf {
    // Explicitly setting protocol buffers version
    // so that the build will fail if this specific
    // version of the compiler is not present.
    version = '3.5.0'
    compiler = f
    src = 'src/main/proto'
    autoDependency = true
    outputToProjectDir = true
    outputCpp = 'generated/proto/cpp'
    outputJava = 'generated/proto/java'
    outputPython = 'generated/proto/python'
}

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
    }
}

bintray {
    user = 'rlbotofficial'
    key = apikey
    pkg {
        repo = 'RLBotProto'
        name = 'generatedFiles'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/RLBot/RLBotProtobuf.git'
        version {
            name = '0.0.1-Initial'
            released = new Date()
            vcsTag = '0.0.1'
        }
    }
    filesSpec {
        from 'generated/proto'
        into 'generated'
    }
}
